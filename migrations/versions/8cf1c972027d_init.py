"""init

Revision ID: 8cf1c972027d
Revises:
Create Date: 2025-09-22 23:37:19.393276

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "8cf1c972027d"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("username", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("first_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("last_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(), nullable=True),
        sa.Column("updated_at", postgresql.TIMESTAMP(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    # op.alter_column('books', 'published_date',
    #            existing_type=sa.VARCHAR(),
    #            type_=sa.Date(),
    #            existing_nullable=False)

    # Fix published_date column with explicit USING clause
    op.execute(
        """
        ALTER TABLE books
        ALTER COLUMN published_date TYPE DATE
        USING published_date::date;
    """
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # op.alter_column(
    #     "books",
    #     "published_date",
    #     existing_type=sa.Date(),
    #     type_=sa.VARCHAR(),
    #     existing_nullable=False,
    # )
    # Revert published_date back to VARCHAR
    op.execute(
        """
        ALTER TABLE books
        ALTER COLUMN published_date TYPE VARCHAR
        USING published_date::text;
    """
    )
    op.drop_table("users")
    # ### end Alembic commands ###
